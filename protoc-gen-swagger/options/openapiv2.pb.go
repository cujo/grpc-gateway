// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoc-gen-swagger/options/openapiv2.proto

/*
Package options is a generated protocol buffer package.

It is generated from these files:
	protoc-gen-swagger/options/openapiv2.proto
	protoc-gen-swagger/options/annotations.proto

It has these top-level messages:
	Swagger
	Response
	Operation
	Info
	Contact
	ExternalDocumentation
	Schema
	JSONSchema
	Tag
	SecurityDefinitions
	SecurityScheme
	SecurityRequirement
	Scopes
*/
package options

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Swagger_SwaggerScheme int32

const (
	Swagger_UNKNOWN Swagger_SwaggerScheme = 0
	Swagger_HTTP    Swagger_SwaggerScheme = 1
	Swagger_HTTPS   Swagger_SwaggerScheme = 2
	Swagger_WS      Swagger_SwaggerScheme = 3
	Swagger_WSS     Swagger_SwaggerScheme = 4
)

var Swagger_SwaggerScheme_name = map[int32]string{
	0: "UNKNOWN",
	1: "HTTP",
	2: "HTTPS",
	3: "WS",
	4: "WSS",
}
var Swagger_SwaggerScheme_value = map[string]int32{
	"UNKNOWN": 0,
	"HTTP":    1,
	"HTTPS":   2,
	"WS":      3,
	"WSS":     4,
}

func (x Swagger_SwaggerScheme) String() string {
	return proto.EnumName(Swagger_SwaggerScheme_name, int32(x))
}
func (Swagger_SwaggerScheme) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type JSONSchema_JSONSchemaSimpleTypes int32

const (
	JSONSchema_UNKNOWN JSONSchema_JSONSchemaSimpleTypes = 0
	JSONSchema_ARRAY   JSONSchema_JSONSchemaSimpleTypes = 1
	JSONSchema_BOOLEAN JSONSchema_JSONSchemaSimpleTypes = 2
	JSONSchema_INTEGER JSONSchema_JSONSchemaSimpleTypes = 3
	JSONSchema_NULL    JSONSchema_JSONSchemaSimpleTypes = 4
	JSONSchema_NUMBER  JSONSchema_JSONSchemaSimpleTypes = 5
	JSONSchema_OBJECT  JSONSchema_JSONSchemaSimpleTypes = 6
	JSONSchema_STRING  JSONSchema_JSONSchemaSimpleTypes = 7
)

var JSONSchema_JSONSchemaSimpleTypes_name = map[int32]string{
	0: "UNKNOWN",
	1: "ARRAY",
	2: "BOOLEAN",
	3: "INTEGER",
	4: "NULL",
	5: "NUMBER",
	6: "OBJECT",
	7: "STRING",
}
var JSONSchema_JSONSchemaSimpleTypes_value = map[string]int32{
	"UNKNOWN": 0,
	"ARRAY":   1,
	"BOOLEAN": 2,
	"INTEGER": 3,
	"NULL":    4,
	"NUMBER":  5,
	"OBJECT":  6,
	"STRING":  7,
}

func (x JSONSchema_JSONSchemaSimpleTypes) String() string {
	return proto.EnumName(JSONSchema_JSONSchemaSimpleTypes_name, int32(x))
}
func (JSONSchema_JSONSchemaSimpleTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

// Required. The type of the security scheme. Valid values are "basic",
// "apiKey" or "oauth2".
type SecurityScheme_Type int32

const (
	SecurityScheme_TYPE_INVALID SecurityScheme_Type = 0
	SecurityScheme_TYPE_BASIC   SecurityScheme_Type = 1
	SecurityScheme_TYPE_API_KEY SecurityScheme_Type = 2
	SecurityScheme_TYPE_OAUTH2  SecurityScheme_Type = 3
)

var SecurityScheme_Type_name = map[int32]string{
	0: "TYPE_INVALID",
	1: "TYPE_BASIC",
	2: "TYPE_API_KEY",
	3: "TYPE_OAUTH2",
}
var SecurityScheme_Type_value = map[string]int32{
	"TYPE_INVALID": 0,
	"TYPE_BASIC":   1,
	"TYPE_API_KEY": 2,
	"TYPE_OAUTH2":  3,
}

func (x SecurityScheme_Type) String() string {
	return proto.EnumName(SecurityScheme_Type_name, int32(x))
}
func (SecurityScheme_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

// Required. The location of the API key. Valid values are "query" or "header".
type SecurityScheme_In int32

const (
	SecurityScheme_IN_INVALID SecurityScheme_In = 0
	SecurityScheme_IN_QUERY   SecurityScheme_In = 1
	SecurityScheme_IN_HEADER  SecurityScheme_In = 2
)

var SecurityScheme_In_name = map[int32]string{
	0: "IN_INVALID",
	1: "IN_QUERY",
	2: "IN_HEADER",
}
var SecurityScheme_In_value = map[string]int32{
	"IN_INVALID": 0,
	"IN_QUERY":   1,
	"IN_HEADER":  2,
}

func (x SecurityScheme_In) String() string {
	return proto.EnumName(SecurityScheme_In_name, int32(x))
}
func (SecurityScheme_In) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 1} }

// Required. The flow used by the OAuth2 security scheme. Valid values are
// "implicit", "password", "application" or "accessCode".
type SecurityScheme_Flow int32

const (
	SecurityScheme_FLOW_INVALID     SecurityScheme_Flow = 0
	SecurityScheme_FLOW_IMPLICIT    SecurityScheme_Flow = 1
	SecurityScheme_FLOW_PASSWORD    SecurityScheme_Flow = 2
	SecurityScheme_FLOW_APPLICATION SecurityScheme_Flow = 3
	SecurityScheme_FLOW_ACCESS_CODE SecurityScheme_Flow = 4
)

var SecurityScheme_Flow_name = map[int32]string{
	0: "FLOW_INVALID",
	1: "FLOW_IMPLICIT",
	2: "FLOW_PASSWORD",
	3: "FLOW_APPLICATION",
	4: "FLOW_ACCESS_CODE",
}
var SecurityScheme_Flow_value = map[string]int32{
	"FLOW_INVALID":     0,
	"FLOW_IMPLICIT":    1,
	"FLOW_PASSWORD":    2,
	"FLOW_APPLICATION": 3,
	"FLOW_ACCESS_CODE": 4,
}

func (x SecurityScheme_Flow) String() string {
	return proto.EnumName(SecurityScheme_Flow_name, int32(x))
}
func (SecurityScheme_Flow) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 2} }

// `Swagger` is a representation of OpenAPI v2 specification's Swagger object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#swaggerObject
//
// TODO(ivucica): document fields
type Swagger struct {
	Swagger             string                  `protobuf:"bytes,1,opt,name=swagger" json:"swagger,omitempty"`
	Info                *Info                   `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Host                string                  `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	BasePath            string                  `protobuf:"bytes,4,opt,name=base_path,json=basePath" json:"base_path,omitempty"`
	Schemes             []Swagger_SwaggerScheme `protobuf:"varint,5,rep,packed,name=schemes,enum=grpc.gateway.protoc_gen_swagger.options.Swagger_SwaggerScheme" json:"schemes,omitempty"`
	Consumes            []string                `protobuf:"bytes,6,rep,name=consumes" json:"consumes,omitempty"`
	Produces            []string                `protobuf:"bytes,7,rep,name=produces" json:"produces,omitempty"`
	SecurityDefinitions *SecurityDefinitions    `protobuf:"bytes,11,opt,name=security_definitions,json=securityDefinitions" json:"security_definitions,omitempty"`
	Security            []*SecurityRequirement  `protobuf:"bytes,12,rep,name=security" json:"security,omitempty"`
	ExternalDocs        *ExternalDocumentation  `protobuf:"bytes,14,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
}

func (m *Swagger) Reset()                    { *m = Swagger{} }
func (m *Swagger) String() string            { return proto.CompactTextString(m) }
func (*Swagger) ProtoMessage()               {}
func (*Swagger) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Swagger) GetSwagger() string {
	if m != nil {
		return m.Swagger
	}
	return ""
}

func (m *Swagger) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Swagger) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Swagger) GetBasePath() string {
	if m != nil {
		return m.BasePath
	}
	return ""
}

func (m *Swagger) GetSchemes() []Swagger_SwaggerScheme {
	if m != nil {
		return m.Schemes
	}
	return nil
}

func (m *Swagger) GetConsumes() []string {
	if m != nil {
		return m.Consumes
	}
	return nil
}

func (m *Swagger) GetProduces() []string {
	if m != nil {
		return m.Produces
	}
	return nil
}

func (m *Swagger) GetSecurityDefinitions() *SecurityDefinitions {
	if m != nil {
		return m.SecurityDefinitions
	}
	return nil
}

func (m *Swagger) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Swagger) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

type Response struct {
	Code        string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Response) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// `Operation` is a representation of OpenAPI v2 specification's Operation object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#operationObject
//
// TODO(ivucica): document fields
type Operation struct {
	Tags         []string               `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	Summary      string                 `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	OperationId  string                 `protobuf:"bytes,5,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Consumes     []string               `protobuf:"bytes,6,rep,name=consumes" json:"consumes,omitempty"`
	Produces     []string               `protobuf:"bytes,7,rep,name=produces" json:"produces,omitempty"`
	Responses    []*Response            `protobuf:"bytes,9,rep,name=responses" json:"responses,omitempty"`
	Schemes      []string               `protobuf:"bytes,10,rep,name=schemes" json:"schemes,omitempty"`
	Deprecated   bool                   `protobuf:"varint,11,opt,name=deprecated" json:"deprecated,omitempty"`
	Security     []*SecurityRequirement `protobuf:"bytes,12,rep,name=security" json:"security,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Operation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Operation) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Operation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Operation) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Operation) GetOperationId() string {
	if m != nil {
		return m.OperationId
	}
	return ""
}

func (m *Operation) GetConsumes() []string {
	if m != nil {
		return m.Consumes
	}
	return nil
}

func (m *Operation) GetProduces() []string {
	if m != nil {
		return m.Produces
	}
	return nil
}

func (m *Operation) GetResponses() []*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Operation) GetSchemes() []string {
	if m != nil {
		return m.Schemes
	}
	return nil
}

func (m *Operation) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

func (m *Operation) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

// `Info` is a representation of OpenAPI v2 specification's Info object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#infoObject
//
// TODO(ivucica): document fields
type Info struct {
	Title          string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description    string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	TermsOfService string   `protobuf:"bytes,3,opt,name=terms_of_service,json=termsOfService" json:"terms_of_service,omitempty"`
	Contact        *Contact `protobuf:"bytes,4,opt,name=contact" json:"contact,omitempty"`
	Version        string   `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Info) GetTermsOfService() string {
	if m != nil {
		return m.TermsOfService
	}
	return ""
}

func (m *Info) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Info) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// `Contact` is a representation of OpenAPI v2 specification's Contact object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#contactObject
//
// TODO(ivucica): document fields
type Contact struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// `ExternalDocumentation` is a representation of OpenAPI v2 specification's
// ExternalDocumentation object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#externalDocumentationObject
//
// TODO(ivucica): document fields
type ExternalDocumentation struct {
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (m *ExternalDocumentation) Reset()                    { *m = ExternalDocumentation{} }
func (m *ExternalDocumentation) String() string            { return proto.CompactTextString(m) }
func (*ExternalDocumentation) ProtoMessage()               {}
func (*ExternalDocumentation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ExternalDocumentation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ExternalDocumentation) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// `Schema` is a representation of OpenAPI v2 specification's Schema object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
//
// TODO(ivucica): document fields
type Schema struct {
	JsonSchema    *JSONSchema            `protobuf:"bytes,1,opt,name=json_schema,json=jsonSchema" json:"json_schema,omitempty"`
	Discriminator string                 `protobuf:"bytes,2,opt,name=discriminator" json:"discriminator,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,3,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	ExternalDocs  *ExternalDocumentation `protobuf:"bytes,5,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	Example       *google_protobuf.Any   `protobuf:"bytes,6,opt,name=example" json:"example,omitempty"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Schema) GetJsonSchema() *JSONSchema {
	if m != nil {
		return m.JsonSchema
	}
	return nil
}

func (m *Schema) GetDiscriminator() string {
	if m != nil {
		return m.Discriminator
	}
	return ""
}

func (m *Schema) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *Schema) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Schema) GetExample() *google_protobuf.Any {
	if m != nil {
		return m.Example
	}
	return nil
}

// `JSONSchema` represents properties from JSON Schema taken, and as used, in
// the OpenAPI v2 spec.
//
// This includes changes made by OpenAPI v2.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
//
// See also: https://cswr.github.io/JsonSchema/spec/basic_types/,
// https://github.com/json-schema-org/json-schema-spec/blob/master/schema.json
//
// TODO(ivucica): document fields
type JSONSchema struct {
	Title            string   `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Description      string   `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Default          string   `protobuf:"bytes,7,opt,name=default" json:"default,omitempty"`
	MultipleOf       float64  `protobuf:"fixed64,10,opt,name=multiple_of,json=multipleOf" json:"multiple_of,omitempty"`
	Maximum          float64  `protobuf:"fixed64,11,opt,name=maximum" json:"maximum,omitempty"`
	ExclusiveMaximum bool     `protobuf:"varint,12,opt,name=exclusive_maximum,json=exclusiveMaximum" json:"exclusive_maximum,omitempty"`
	Minimum          float64  `protobuf:"fixed64,13,opt,name=minimum" json:"minimum,omitempty"`
	ExclusiveMinimum bool     `protobuf:"varint,14,opt,name=exclusive_minimum,json=exclusiveMinimum" json:"exclusive_minimum,omitempty"`
	MaxLength        uint64   `protobuf:"varint,15,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	MinLength        uint64   `protobuf:"varint,16,opt,name=min_length,json=minLength" json:"min_length,omitempty"`
	Pattern          string   `protobuf:"bytes,17,opt,name=pattern" json:"pattern,omitempty"`
	MaxItems         uint64   `protobuf:"varint,20,opt,name=max_items,json=maxItems" json:"max_items,omitempty"`
	MinItems         uint64   `protobuf:"varint,21,opt,name=min_items,json=minItems" json:"min_items,omitempty"`
	UniqueItems      bool     `protobuf:"varint,22,opt,name=unique_items,json=uniqueItems" json:"unique_items,omitempty"`
	MaxProperties    uint64   `protobuf:"varint,24,opt,name=max_properties,json=maxProperties" json:"max_properties,omitempty"`
	MinProperties    uint64   `protobuf:"varint,25,opt,name=min_properties,json=minProperties" json:"min_properties,omitempty"`
	Required         []string `protobuf:"bytes,26,rep,name=required" json:"required,omitempty"`
	// Items in 'array' must be unique.
	Array []string                           `protobuf:"bytes,34,rep,name=array" json:"array,omitempty"`
	Type  []JSONSchema_JSONSchemaSimpleTypes `protobuf:"varint,35,rep,packed,name=type,enum=grpc.gateway.protoc_gen_swagger.options.JSONSchema_JSONSchemaSimpleTypes" json:"type,omitempty"`
}

func (m *JSONSchema) Reset()                    { *m = JSONSchema{} }
func (m *JSONSchema) String() string            { return proto.CompactTextString(m) }
func (*JSONSchema) ProtoMessage()               {}
func (*JSONSchema) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *JSONSchema) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *JSONSchema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *JSONSchema) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *JSONSchema) GetMultipleOf() float64 {
	if m != nil {
		return m.MultipleOf
	}
	return 0
}

func (m *JSONSchema) GetMaximum() float64 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *JSONSchema) GetExclusiveMaximum() bool {
	if m != nil {
		return m.ExclusiveMaximum
	}
	return false
}

func (m *JSONSchema) GetMinimum() float64 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *JSONSchema) GetExclusiveMinimum() bool {
	if m != nil {
		return m.ExclusiveMinimum
	}
	return false
}

func (m *JSONSchema) GetMaxLength() uint64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *JSONSchema) GetMinLength() uint64 {
	if m != nil {
		return m.MinLength
	}
	return 0
}

func (m *JSONSchema) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *JSONSchema) GetMaxItems() uint64 {
	if m != nil {
		return m.MaxItems
	}
	return 0
}

func (m *JSONSchema) GetMinItems() uint64 {
	if m != nil {
		return m.MinItems
	}
	return 0
}

func (m *JSONSchema) GetUniqueItems() bool {
	if m != nil {
		return m.UniqueItems
	}
	return false
}

func (m *JSONSchema) GetMaxProperties() uint64 {
	if m != nil {
		return m.MaxProperties
	}
	return 0
}

func (m *JSONSchema) GetMinProperties() uint64 {
	if m != nil {
		return m.MinProperties
	}
	return 0
}

func (m *JSONSchema) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *JSONSchema) GetArray() []string {
	if m != nil {
		return m.Array
	}
	return nil
}

func (m *JSONSchema) GetType() []JSONSchema_JSONSchemaSimpleTypes {
	if m != nil {
		return m.Type
	}
	return nil
}

// `Tag` is a representation of OpenAPI v2 specification's Tag object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#tagObject
//
// TODO(ivucica): document fields
type Tag struct {
	// TODO(ivucica): Description should be extracted from comments on the proto
	// service object.
	Description  string                 `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,3,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

// `SecurityDefinitions` is a representation of OpenAPI v2 specification's
// Security Definitions object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityDefinitionsObject
//
// A declaration of the security schemes available to be used in the
// specification. This does not enforce the security schemes on the operations
// and only serves to provide the relevant details for each scheme.
type SecurityDefinitions struct {
	// A single security scheme definition, mapping a "name" to the scheme it defines.
	Security map[string]*SecurityScheme `protobuf:"bytes,1,rep,name=security" json:"security,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityDefinitions) Reset()                    { *m = SecurityDefinitions{} }
func (m *SecurityDefinitions) String() string            { return proto.CompactTextString(m) }
func (*SecurityDefinitions) ProtoMessage()               {}
func (*SecurityDefinitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SecurityDefinitions) GetSecurity() map[string]*SecurityScheme {
	if m != nil {
		return m.Security
	}
	return nil
}

// `SecurityScheme` is a representation of OpenAPI v2 specification's
// Security Scheme object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securitySchemeObject
//
// Allows the definition of a security scheme that can be used by the
// operations. Supported schemes are basic authentication, an API key (either as
// a header or as a query parameter) and OAuth2's common flows (implicit,
// password, application and access code).
type SecurityScheme struct {
	// Required. The type of the security scheme. Valid values are "basic",
	// "apiKey" or "oauth2".
	Type SecurityScheme_Type `protobuf:"varint,1,opt,name=type,enum=grpc.gateway.protoc_gen_swagger.options.SecurityScheme_Type" json:"type,omitempty"`
	// A short description for security scheme.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Required. The name of the header or query parameter to be used.
	//
	// Valid for apiKey.
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Required. The location of the API key. Valid values are "query" or "header".
	//
	// Valid for apiKey.
	In SecurityScheme_In `protobuf:"varint,4,opt,name=in,enum=grpc.gateway.protoc_gen_swagger.options.SecurityScheme_In" json:"in,omitempty"`
	// Required. The flow used by the OAuth2 security scheme. Valid values are
	// "implicit", "password", "application" or "accessCode".
	//
	// Valid for oauth2.
	Flow SecurityScheme_Flow `protobuf:"varint,5,opt,name=flow,enum=grpc.gateway.protoc_gen_swagger.options.SecurityScheme_Flow" json:"flow,omitempty"`
	// Required. The authorization URL to be used for this flow. This SHOULD be in
	// the form of a URL.
	//
	// Valid for oauth2/implicit and oauth2/accessCode.
	AuthorizationUrl string `protobuf:"bytes,6,opt,name=authorization_url,json=authorizationUrl" json:"authorization_url,omitempty"`
	// Required. The token URL to be used for this flow. This SHOULD be in the
	// form of a URL.
	//
	// Valid for oauth2/password, oauth2/application and oauth2/accessCode.
	TokenUrl string `protobuf:"bytes,7,opt,name=token_url,json=tokenUrl" json:"token_url,omitempty"`
	// Required. The available scopes for the OAuth2 security scheme.
	//
	// Valid for oauth2.
	Scopes *Scopes `protobuf:"bytes,8,opt,name=scopes" json:"scopes,omitempty"`
}

func (m *SecurityScheme) Reset()                    { *m = SecurityScheme{} }
func (m *SecurityScheme) String() string            { return proto.CompactTextString(m) }
func (*SecurityScheme) ProtoMessage()               {}
func (*SecurityScheme) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SecurityScheme) GetType() SecurityScheme_Type {
	if m != nil {
		return m.Type
	}
	return SecurityScheme_TYPE_INVALID
}

func (m *SecurityScheme) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityScheme) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecurityScheme) GetIn() SecurityScheme_In {
	if m != nil {
		return m.In
	}
	return SecurityScheme_IN_INVALID
}

func (m *SecurityScheme) GetFlow() SecurityScheme_Flow {
	if m != nil {
		return m.Flow
	}
	return SecurityScheme_FLOW_INVALID
}

func (m *SecurityScheme) GetAuthorizationUrl() string {
	if m != nil {
		return m.AuthorizationUrl
	}
	return ""
}

func (m *SecurityScheme) GetTokenUrl() string {
	if m != nil {
		return m.TokenUrl
	}
	return ""
}

func (m *SecurityScheme) GetScopes() *Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

// `SecurityRequirement` is a representation of OpenAPI v2 specification's
// Security Requirement object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityRequirementObject
//
// Lists the required security schemes to execute this operation. The object can
// have multiple security schemes declared in it which are all required (that
// is, there is a logical AND between the schemes).
//
// The name used for each property MUST correspond to a security scheme
// declared in the Security Definitions.
type SecurityRequirement struct {
	// Each name must correspond to a security scheme which is declared in
	// the Security Definitions. If the security scheme is of type "oauth2",
	// then the value is a list of scope names required for the execution.
	// For other security scheme types, the array MUST be empty.
	SecurityRequirement map[string]*SecurityRequirement_SecurityRequirementValue `protobuf:"bytes,1,rep,name=security_requirement,json=securityRequirement" json:"security_requirement,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityRequirement) Reset()                    { *m = SecurityRequirement{} }
func (m *SecurityRequirement) String() string            { return proto.CompactTextString(m) }
func (*SecurityRequirement) ProtoMessage()               {}
func (*SecurityRequirement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SecurityRequirement) GetSecurityRequirement() map[string]*SecurityRequirement_SecurityRequirementValue {
	if m != nil {
		return m.SecurityRequirement
	}
	return nil
}

// If the security scheme is of type "oauth2", then the value is a list of
// scope names required for the execution. For other security scheme types,
// the array MUST be empty.
type SecurityRequirement_SecurityRequirementValue struct {
	Scope []string `protobuf:"bytes,1,rep,name=scope" json:"scope,omitempty"`
}

func (m *SecurityRequirement_SecurityRequirementValue) Reset() {
	*m = SecurityRequirement_SecurityRequirementValue{}
}
func (m *SecurityRequirement_SecurityRequirementValue) String() string {
	return proto.CompactTextString(m)
}
func (*SecurityRequirement_SecurityRequirementValue) ProtoMessage() {}
func (*SecurityRequirement_SecurityRequirementValue) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 0}
}

func (m *SecurityRequirement_SecurityRequirementValue) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

// `Scopes` is a representation of OpenAPI v2 specification's Scopes object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#scopesObject
//
// Lists the available scopes for an OAuth2 security scheme.
type Scopes struct {
	// Maps between a name of a scope to a short description of it (as the value
	// of the property).
	Scope map[string]string `protobuf:"bytes,1,rep,name=scope" json:"scope,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Scopes) Reset()                    { *m = Scopes{} }
func (m *Scopes) String() string            { return proto.CompactTextString(m) }
func (*Scopes) ProtoMessage()               {}
func (*Scopes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Scopes) GetScope() map[string]string {
	if m != nil {
		return m.Scope
	}
	return nil
}

func init() {
	proto.RegisterType((*Swagger)(nil), "grpc.gateway.protoc_gen_swagger.options.Swagger")
	proto.RegisterType((*Response)(nil), "grpc.gateway.protoc_gen_swagger.options.Response")
	proto.RegisterType((*Operation)(nil), "grpc.gateway.protoc_gen_swagger.options.Operation")
	proto.RegisterType((*Info)(nil), "grpc.gateway.protoc_gen_swagger.options.Info")
	proto.RegisterType((*Contact)(nil), "grpc.gateway.protoc_gen_swagger.options.Contact")
	proto.RegisterType((*ExternalDocumentation)(nil), "grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation")
	proto.RegisterType((*Schema)(nil), "grpc.gateway.protoc_gen_swagger.options.Schema")
	proto.RegisterType((*JSONSchema)(nil), "grpc.gateway.protoc_gen_swagger.options.JSONSchema")
	proto.RegisterType((*Tag)(nil), "grpc.gateway.protoc_gen_swagger.options.Tag")
	proto.RegisterType((*SecurityDefinitions)(nil), "grpc.gateway.protoc_gen_swagger.options.SecurityDefinitions")
	proto.RegisterType((*SecurityScheme)(nil), "grpc.gateway.protoc_gen_swagger.options.SecurityScheme")
	proto.RegisterType((*SecurityRequirement)(nil), "grpc.gateway.protoc_gen_swagger.options.SecurityRequirement")
	proto.RegisterType((*SecurityRequirement_SecurityRequirementValue)(nil), "grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue")
	proto.RegisterType((*Scopes)(nil), "grpc.gateway.protoc_gen_swagger.options.Scopes")
	proto.RegisterEnum("grpc.gateway.protoc_gen_swagger.options.Swagger_SwaggerScheme", Swagger_SwaggerScheme_name, Swagger_SwaggerScheme_value)
	proto.RegisterEnum("grpc.gateway.protoc_gen_swagger.options.JSONSchema_JSONSchemaSimpleTypes", JSONSchema_JSONSchemaSimpleTypes_name, JSONSchema_JSONSchemaSimpleTypes_value)
	proto.RegisterEnum("grpc.gateway.protoc_gen_swagger.options.SecurityScheme_Type", SecurityScheme_Type_name, SecurityScheme_Type_value)
	proto.RegisterEnum("grpc.gateway.protoc_gen_swagger.options.SecurityScheme_In", SecurityScheme_In_name, SecurityScheme_In_value)
	proto.RegisterEnum("grpc.gateway.protoc_gen_swagger.options.SecurityScheme_Flow", SecurityScheme_Flow_name, SecurityScheme_Flow_value)
}

func init() { proto.RegisterFile("protoc-gen-swagger/options/openapiv2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x72, 0xdb, 0xc6,
	0x15, 0x0e, 0xc8, 0x25, 0x09, 0x1e, 0x4a, 0xcc, 0x7a, 0x2d, 0xb7, 0x88, 0x12, 0xbb, 0x0a, 0x9a,
	0x4e, 0x35, 0xf6, 0x98, 0x4a, 0x94, 0x8b, 0x66, 0x32, 0x9d, 0x4e, 0x29, 0x89, 0xb1, 0x01, 0xcb,
	0x24, 0x0b, 0x52, 0x51, 0xdc, 0x99, 0x0e, 0x06, 0x06, 0x97, 0x14, 0x62, 0x60, 0x81, 0xe0, 0x47,
	0x12, 0xfb, 0x00, 0x9d, 0x5e, 0x77, 0x7a, 0xdb, 0xc7, 0xe8, 0x5d, 0x1f, 0xa3, 0x4f, 0xd2, 0xde,
	0xf5, 0xaa, 0xb3, 0x3f, 0x20, 0xa9, 0x9f, 0xb4, 0x8c, 0xec, 0x5c, 0x71, 0xcf, 0xdf, 0xb7, 0xe7,
	0x9c, 0x3d, 0x7b, 0xce, 0x82, 0xf0, 0x38, 0x49, 0xe3, 0x3c, 0xf6, 0x9f, 0xce, 0x28, 0x7b, 0x9a,
	0x5d, 0x78, 0xb3, 0x19, 0x4d, 0xf7, 0xe2, 0x24, 0x0f, 0x62, 0x96, 0xed, 0xc5, 0x09, 0x65, 0x5e,
	0x12, 0x9c, 0xef, 0x77, 0x84, 0x12, 0xf9, 0xe5, 0x2c, 0x4d, 0xfc, 0xce, 0xcc, 0xcb, 0xe9, 0x85,
	0x37, 0x97, 0x3c, 0xdf, 0x9d, 0x51, 0xe6, 0x2a, 0xc3, 0x8e, 0x32, 0xdc, 0xfe, 0x60, 0x16, 0xc7,
	0xb3, 0x90, 0xee, 0x09, 0x95, 0xd7, 0xc5, 0x74, 0xcf, 0x63, 0x4a, 0xdf, 0xfc, 0x7b, 0x0d, 0x1a,
	0x23, 0xa9, 0x4e, 0x0c, 0x68, 0x28, 0x4b, 0x43, 0xdb, 0xd1, 0x76, 0x9b, 0x4e, 0x49, 0x92, 0x2e,
	0xa0, 0x80, 0x4d, 0x63, 0xa3, 0xb2, 0xa3, 0xed, 0xb6, 0xf6, 0x9f, 0x76, 0xd6, 0xdc, 0xb8, 0x63,
	0xb1, 0x69, 0xec, 0x08, 0x53, 0x42, 0x00, 0x9d, 0xc5, 0x59, 0x6e, 0x54, 0x05, 0xb2, 0x58, 0x93,
	0x0f, 0xa1, 0xf9, 0xda, 0xcb, 0xa8, 0x9b, 0x78, 0xf9, 0x99, 0x81, 0x84, 0x40, 0xe7, 0x8c, 0xa1,
	0x97, 0x9f, 0x91, 0x6f, 0xa0, 0x91, 0xf9, 0x67, 0x34, 0xa2, 0x99, 0x51, 0xdb, 0xa9, 0xee, 0xb6,
	0xf7, 0x7f, 0xb3, 0xf6, 0xb6, 0x2a, 0xa0, 0xf2, 0x77, 0x24, 0x60, 0x9c, 0x12, 0x8e, 0x6c, 0x83,
	0xee, 0xc7, 0x2c, 0x2b, 0x38, 0x74, 0x7d, 0xa7, 0xca, 0x77, 0x2d, 0x69, 0x2e, 0x4b, 0xd2, 0x78,
	0x52, 0xf8, 0x34, 0x33, 0x1a, 0x52, 0x56, 0xd2, 0x24, 0x86, 0xad, 0x8c, 0xfa, 0x45, 0x1a, 0xe4,
	0x73, 0x77, 0x42, 0xa7, 0x01, 0x0b, 0xc4, 0x76, 0x46, 0x4b, 0x64, 0xe5, 0xd7, 0xeb, 0xbb, 0xa7,
	0x40, 0x8e, 0x96, 0x18, 0xce, 0xfd, 0xec, 0x26, 0x93, 0x7c, 0x03, 0x7a, 0xc9, 0x36, 0x36, 0x76,
	0xaa, 0x77, 0xda, 0xc4, 0xa1, 0xdf, 0x15, 0x41, 0x4a, 0x23, 0xca, 0x72, 0x67, 0x81, 0x46, 0x7c,
	0xd8, 0xa4, 0x97, 0x39, 0x4d, 0x99, 0x17, 0xba, 0x93, 0xd8, 0xcf, 0x8c, 0xb6, 0x88, 0x61, 0xfd,
	0x14, 0xf7, 0x94, 0xf5, 0x51, 0xec, 0x17, 0x1c, 0xdb, 0xe3, 0x6c, 0x67, 0x83, 0x2e, 0xd9, 0x99,
	0x79, 0x00, 0x9b, 0x57, 0x4e, 0x80, 0xb4, 0xa0, 0x71, 0xd2, 0x7f, 0xd1, 0x1f, 0x9c, 0xf6, 0xf1,
	0x7b, 0x44, 0x07, 0xf4, 0x7c, 0x3c, 0x1e, 0x62, 0x8d, 0x34, 0xa1, 0xc6, 0x57, 0x23, 0x5c, 0x21,
	0x75, 0xa8, 0x9c, 0x8e, 0x70, 0x95, 0x34, 0xa0, 0x7a, 0x3a, 0x1a, 0x61, 0x64, 0x23, 0x5d, 0xc7,
	0x4d, 0x1b, 0xe9, 0x4d, 0x0c, 0x36, 0xd2, 0x01, 0xb7, 0x6c, 0xa4, 0x6f, 0xe2, 0xb6, 0xf9, 0x5b,
	0xd0, 0x1d, 0x9a, 0x25, 0x31, 0xcb, 0x28, 0x2f, 0x2d, 0x3f, 0x9e, 0x50, 0x55, 0xb4, 0x62, 0x4d,
	0x76, 0xa0, 0x35, 0xa1, 0x99, 0x9f, 0x06, 0xc2, 0x5f, 0x51, 0xb8, 0x4d, 0x67, 0x95, 0x65, 0xfe,
	0x09, 0x41, 0x73, 0x90, 0xd0, 0x54, 0x78, 0xce, 0x31, 0x72, 0x6f, 0x96, 0x19, 0x9a, 0x38, 0x73,
	0xb1, 0x16, 0xf7, 0xa1, 0x88, 0x22, 0x2f, 0x9d, 0x2b, 0xfb, 0x92, 0xbc, 0x8e, 0x5e, 0xbd, 0x81,
	0x7e, 0x33, 0xc1, 0xe8, 0xdd, 0x27, 0x98, 0x7c, 0x0c, 0x1b, 0x71, 0x19, 0x81, 0x1b, 0x4c, 0x8c,
	0x9a, 0xf4, 0x63, 0xc1, 0xb3, 0x26, 0x77, 0xae, 0xf5, 0x01, 0x34, 0x53, 0x95, 0xdf, 0xcc, 0x68,
	0x8a, 0xda, 0xfb, 0x6c, 0x6d, 0xdf, 0xcb, 0x93, 0x71, 0x96, 0x18, 0x22, 0x99, 0xea, 0x3a, 0x83,
	0xd8, 0x6b, 0x71, 0x1d, 0x1f, 0x01, 0x4c, 0x68, 0x92, 0x52, 0xdf, 0xcb, 0xe9, 0x44, 0x5c, 0x26,
	0xdd, 0x59, 0xe1, 0xfc, 0x78, 0xb7, 0x40, 0x16, 0x97, 0xf9, 0x4f, 0x0d, 0x10, 0x6f, 0x54, 0x64,
	0x0b, 0x6a, 0x79, 0x90, 0x87, 0x65, 0x21, 0x49, 0xe2, 0xff, 0x57, 0x12, 0xd9, 0x05, 0x9c, 0xd3,
	0x34, 0xca, 0xdc, 0x78, 0xea, 0x66, 0x34, 0x3d, 0x0f, 0x7c, 0xaa, 0x4a, 0xa2, 0x2d, 0xf8, 0x83,
	0xe9, 0x48, 0x72, 0x89, 0x0d, 0x0d, 0x3f, 0x66, 0xb9, 0xe7, 0xe7, 0xaa, 0x1e, 0x3e, 0x5d, 0x3b,
	0x92, 0x43, 0x69, 0xe7, 0x94, 0x00, 0x3c, 0xa1, 0xe7, 0x34, 0xcd, 0xb8, 0x4f, 0x75, 0x59, 0x9d,
	0x8a, 0xb4, 0x91, 0x5e, 0xc3, 0x75, 0xb3, 0x07, 0x0d, 0x65, 0xc3, 0x8b, 0x9b, 0x79, 0xd1, 0xe2,
	0x82, 0xf0, 0x35, 0xc1, 0x50, 0x2d, 0xd2, 0x50, 0x85, 0xc3, 0x97, 0x3c, 0x7c, 0x1a, 0x79, 0x41,
	0xa8, 0x7c, 0x97, 0x84, 0xf9, 0x02, 0x1e, 0xdc, 0x5a, 0x8a, 0xd7, 0xf3, 0xa2, 0xdd, 0xcc, 0xcb,
	0x8d, 0x2d, 0xcc, 0x7f, 0x54, 0xa0, 0x2e, 0x7a, 0x81, 0x47, 0xc6, 0xd0, 0xfa, 0x36, 0x8b, 0x99,
	0x2b, 0xaa, 0xc0, 0x13, 0xe6, 0xad, 0xfd, 0xcf, 0xd7, 0x4e, 0x87, 0x3d, 0x1a, 0xf4, 0x25, 0x92,
	0x03, 0x1c, 0x47, 0xa1, 0x7e, 0x02, 0x9b, 0x93, 0x80, 0x7b, 0x10, 0x05, 0xcc, 0xcb, 0xe3, 0x54,
	0x6d, 0x7e, 0x95, 0xc9, 0xe7, 0x4e, 0x4a, 0xbd, 0x89, 0x1b, 0xb3, 0x70, 0x2e, 0xa2, 0xd5, 0x1d,
	0x9d, 0x33, 0x06, 0x2c, 0xbc, 0xa5, 0x35, 0xd6, 0x7e, 0x84, 0x9b, 0xdb, 0x81, 0x06, 0xbd, 0xf4,
	0xa2, 0x24, 0xa4, 0xe2, 0xf0, 0x5a, 0xfb, 0x5b, 0x1d, 0x39, 0xa3, 0x3b, 0xe5, 0x8c, 0xee, 0x74,
	0xd9, 0xdc, 0x29, 0x95, 0x6c, 0xa4, 0x23, 0x5c, 0x33, 0xff, 0x53, 0x07, 0x58, 0x06, 0xbe, 0xac,
	0xd7, 0xda, 0xff, 0xa8, 0xd7, 0xfa, 0xcd, 0x73, 0x31, 0xa0, 0x31, 0xa1, 0x53, 0xaf, 0x08, 0x73,
	0xa3, 0x21, 0x2b, 0x47, 0x91, 0xe4, 0x67, 0xd0, 0x8a, 0x8a, 0x30, 0x0f, 0x92, 0x90, 0xba, 0xf1,
	0xd4, 0x80, 0x1d, 0x6d, 0x57, 0x73, 0xa0, 0x64, 0x0d, 0xa6, 0xdc, 0x34, 0xf2, 0x2e, 0x83, 0xa8,
	0x88, 0xc4, 0x45, 0xd5, 0x9c, 0x92, 0x24, 0x4f, 0xe0, 0x1e, 0xbd, 0xf4, 0xc3, 0x22, 0x0b, 0xce,
	0xa9, 0x5b, 0xea, 0x6c, 0x88, 0xdc, 0xe2, 0x85, 0xe0, 0xa5, 0x52, 0xe6, 0x30, 0x01, 0x13, 0x2a,
	0x9b, 0x0a, 0x46, 0x92, 0xd7, 0x60, 0x94, 0x4e, 0xfb, 0x3a, 0x8c, 0x52, 0x7e, 0x08, 0x10, 0x79,
	0x97, 0x6e, 0x48, 0xd9, 0x2c, 0x3f, 0x33, 0xde, 0xdf, 0xd1, 0x76, 0x91, 0xd3, 0x8c, 0xbc, 0xcb,
	0x63, 0xc1, 0x10, 0xe2, 0x80, 0x95, 0x62, 0xac, 0xc4, 0x01, 0x53, 0x62, 0x03, 0x1a, 0x89, 0x97,
	0xf3, 0x43, 0x31, 0xee, 0xc9, 0x34, 0x28, 0x92, 0xd7, 0x07, 0xc7, 0x0d, 0x72, 0x1a, 0x65, 0xc6,
	0x96, 0xb0, 0xd3, 0x23, 0xef, 0xd2, 0xe2, 0xb4, 0x10, 0x06, 0x4c, 0x09, 0x1f, 0x28, 0x61, 0xc0,
	0xa4, 0xf0, 0x63, 0xd8, 0x28, 0x58, 0xf0, 0x5d, 0x41, 0x95, 0xfc, 0x27, 0xc2, 0xf3, 0x96, 0xe4,
	0x49, 0x95, 0x5f, 0x40, 0x9b, 0x83, 0x27, 0x29, 0x6f, 0xd3, 0x79, 0x40, 0x33, 0xc3, 0x10, 0x20,
	0x9b, 0x91, 0x77, 0x39, 0x5c, 0x30, 0x85, 0x5a, 0xc0, 0x56, 0xd5, 0x3e, 0x50, 0x6a, 0x01, 0x5b,
	0x51, 0xdb, 0x06, 0x3d, 0x95, 0xbd, 0x6d, 0x62, 0x6c, 0xcb, 0x1e, 0x5e, 0xd2, 0xbc, 0x3e, 0xbc,
	0x34, 0xf5, 0xe6, 0x86, 0x29, 0x04, 0x92, 0x20, 0x7f, 0x00, 0x94, 0xcf, 0x13, 0x6a, 0xfc, 0x5c,
	0x3c, 0xaa, 0xac, 0x3b, 0xdc, 0xb8, 0x95, 0xe5, 0x28, 0xe0, 0xe5, 0x39, 0x9e, 0x27, 0x34, 0x73,
	0x04, 0xac, 0x79, 0x01, 0x0f, 0x6e, 0x15, 0x5f, 0x1d, 0xfe, 0x4d, 0xa8, 0x75, 0x1d, 0xa7, 0xfb,
	0x0a, 0x6b, 0x9c, 0x7f, 0x30, 0x18, 0x1c, 0xf7, 0xba, 0x7d, 0x5c, 0xe1, 0x84, 0xd5, 0x1f, 0xf7,
	0x9e, 0xf5, 0x1c, 0x5c, 0xe5, 0x2f, 0x84, 0xfe, 0xc9, 0xf1, 0x31, 0x46, 0x04, 0xa0, 0xde, 0x3f,
	0x79, 0x79, 0xd0, 0x73, 0x70, 0x8d, 0xaf, 0x07, 0x07, 0x76, 0xef, 0x70, 0x8c, 0xeb, 0x7c, 0x3d,
	0x1a, 0x3b, 0x56, 0xff, 0x19, 0x6e, 0xd8, 0x48, 0xd7, 0x70, 0xc5, 0x46, 0x7a, 0x05, 0x57, 0x6d,
	0xa4, 0x57, 0xc5, 0xdb, 0x01, 0xe1, 0xda, 0xb5, 0x17, 0x04, 0xc1, 0xf7, 0x6d, 0xa4, 0xdf, 0xc7,
	0x5b, 0x36, 0xd2, 0x7f, 0x8a, 0x0d, 0x1b, 0xe9, 0x1f, 0xe2, 0x8f, 0x6c, 0xa4, 0x7f, 0x84, 0x1f,
	0xda, 0x48, 0x7f, 0x88, 0x1f, 0xd9, 0x48, 0x7f, 0x84, 0x4d, 0x1b, 0xe9, 0x9f, 0xe0, 0xc7, 0x36,
	0xd2, 0x1f, 0xe3, 0x27, 0x36, 0xd2, 0x9f, 0xe0, 0x8e, 0xf9, 0x17, 0x0d, 0xaa, 0x63, 0x6f, 0xb6,
	0xc6, 0x3c, 0xb8, 0xd1, 0x41, 0xaa, 0xef, 0xbe, 0x83, 0xc8, 0x70, 0xcd, 0x7f, 0x6b, 0x70, 0xff,
	0x96, 0xe7, 0x24, 0x99, 0xae, 0xcc, 0x4c, 0x4d, 0xcc, 0x4c, 0xfb, 0x6d, 0x9e, 0xa7, 0x0b, 0x5e,
	0x8f, 0xe5, 0xe9, 0x7c, 0x39, 0x41, 0xb7, 0x73, 0xd8, 0xbc, 0x22, 0xe2, 0x3d, 0xff, 0x0d, 0x9d,
	0xab, 0x69, 0xc0, 0x97, 0xe4, 0x25, 0xd4, 0xce, 0xbd, 0xb0, 0xa0, 0xea, 0xe3, 0xe1, 0x57, 0x3f,
	0xd8, 0x0f, 0xf5, 0x7c, 0x97, 0x28, 0x5f, 0x56, 0xbe, 0xd0, 0xf8, 0x47, 0x4b, 0xfb, 0xaa, 0x94,
	0x0c, 0x55, 0x55, 0xf3, 0x8d, 0xdb, 0x77, 0x78, 0x20, 0x48, 0x98, 0x0e, 0x2f, 0x55, 0x59, 0xc8,
	0x6b, 0x9c, 0x73, 0x39, 0x56, 0xab, 0x2b, 0x63, 0xd5, 0x86, 0x4a, 0xc0, 0xc4, 0x70, 0x6f, 0xef,
	0x7f, 0x79, 0x57, 0x2f, 0x2c, 0xe6, 0x54, 0x02, 0xc6, 0x63, 0x9a, 0x86, 0xf1, 0x85, 0x68, 0xef,
	0x6f, 0x11, 0xd3, 0x57, 0x61, 0x7c, 0xe1, 0x08, 0x24, 0xde, 0x5d, 0xbd, 0x22, 0x3f, 0x8b, 0xd3,
	0xe0, 0x8f, 0xf2, 0xd1, 0xc8, 0xe7, 0xb3, 0x9c, 0x10, 0xf8, 0x8a, 0xe0, 0x24, 0x0d, 0x79, 0xa3,
	0xcb, 0xe3, 0x37, 0x54, 0x2a, 0xc9, 0x41, 0xa1, 0x0b, 0x06, 0x17, 0x3e, 0x83, 0x7a, 0xe6, 0xc7,
	0x09, 0xcd, 0x0c, 0x5d, 0x1c, 0xeb, 0xde, 0xfa, 0xde, 0x09, 0x33, 0x47, 0x99, 0x9b, 0x2f, 0x00,
	0xf1, 0xa4, 0x13, 0x0c, 0x1b, 0xe3, 0x57, 0xc3, 0x9e, 0x6b, 0xf5, 0xbf, 0xee, 0x1e, 0x5b, 0x47,
	0xf8, 0x3d, 0xd2, 0x06, 0x10, 0x9c, 0x83, 0xee, 0xc8, 0x3a, 0xc4, 0xda, 0x42, 0xa3, 0x3b, 0xb4,
	0xdc, 0x17, 0xbd, 0x57, 0xb8, 0x42, 0xde, 0x87, 0x96, 0xe0, 0x0c, 0xba, 0x27, 0xe3, 0xe7, 0xfb,
	0xb8, 0x6a, 0x7e, 0x06, 0x15, 0x8b, 0x71, 0x43, 0xab, 0xbf, 0x02, 0xb4, 0x01, 0xba, 0xd5, 0x77,
	0x7f, 0x77, 0xd2, 0x73, 0x78, 0xbf, 0xd9, 0x84, 0xa6, 0xd5, 0x77, 0x9f, 0xf7, 0xba, 0x47, 0x3d,
	0x07, 0x57, 0xcc, 0x6f, 0x01, 0xf1, 0x04, 0x71, 0xf4, 0xaf, 0x8e, 0x07, 0xa7, 0x2b, 0x66, 0xf7,
	0x60, 0x53, 0x72, 0x5e, 0x0e, 0x8f, 0xad, 0x43, 0x6b, 0x8c, 0xb5, 0x05, 0x6b, 0xd8, 0x1d, 0x8d,
	0x4e, 0x07, 0xce, 0x11, 0xae, 0x90, 0x2d, 0xc0, 0x82, 0xd5, 0x1d, 0x72, 0xad, 0xee, 0xd8, 0x1a,
	0xf4, 0x71, 0x75, 0xc9, 0x3d, 0x3c, 0xec, 0x8d, 0x46, 0xee, 0xe1, 0xe0, 0xa8, 0x87, 0x91, 0xf9,
	0xaf, 0xca, 0xf2, 0xb6, 0xae, 0xbc, 0x48, 0xc9, 0x9f, 0xb5, 0x95, 0x2f, 0xcb, 0x74, 0x29, 0x50,
	0x57, 0xf7, 0xe4, 0x6d, 0x9e, 0xbb, 0xb7, 0xf1, 0xe4, 0x2d, 0x5e, 0x7c, 0x72, 0xae, 0x48, 0xb6,
	0x3f, 0x05, 0xe3, 0x16, 0x83, 0xaf, 0xf9, 0xd5, 0xe3, 0xf3, 0x44, 0x1c, 0x9a, 0xfa, 0x48, 0x92,
	0xc4, 0xf6, 0xdf, 0xb4, 0x5b, 0x4d, 0xbe, 0xaf, 0x1d, 0xbc, 0xb9, 0xda, 0x0e, 0xde, 0x79, 0x6c,
	0xc2, 0xd5, 0xd5, 0x66, 0xf1, 0x57, 0x8d, 0xbf, 0x39, 0x79, 0xad, 0x91, 0xe1, 0x6a, 0x00, 0xad,
	0x1f, 0x72, 0x3f, 0x85, 0xbd, 0xfc, 0x91, 0xc9, 0x53, 0xc1, 0x7f, 0x01, 0xb0, 0x64, 0xde, 0x12,
	0xed, 0xd6, 0x6a, 0xb4, 0xcd, 0x15, 0xb7, 0x0e, 0x0e, 0x7f, 0xdf, 0x9d, 0x05, 0xf9, 0x59, 0xf1,
	0xba, 0xe3, 0xc7, 0xd1, 0x1e, 0x77, 0xe4, 0x29, 0xf5, 0xe3, 0x6c, 0x9e, 0xe5, 0x54, 0x91, 0xca,
	0xaf, 0xbd, 0xef, 0xff, 0x47, 0xe8, 0x75, 0x5d, 0xc8, 0x3e, 0xff, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x38, 0xc9, 0x86, 0x42, 0x36, 0x12, 0x00, 0x00,
}
